[{"C:\\Users\\admin\\react_projs\\email-bulk\\src\\index.js":"1","C:\\Users\\admin\\react_projs\\email-bulk\\src\\App.js":"2","C:\\Users\\admin\\react_projs\\email-bulk\\src\\reportWebVitals.js":"3"},{"size":563,"mtime":1609376503615,"results":"4","hashOfConfig":"5"},{"size":10572,"mtime":1610959297911,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1609250918110,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"105gt2o",{"filePath":"11","messages":"12","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\admin\\react_projs\\email-bulk\\src\\index.js",[],["16","17"],"C:\\Users\\admin\\react_projs\\email-bulk\\src\\App.js",["18","19","20","21"],"import React from \"react\";\r\nimport styles from  './App.module.css';\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      emails: [],\r\n      areaValue: '',\r\n      disabledParse: true,\r\n      disabledSend: true,\r\n      emailStatus: 'Not Started',\r\n      amountPerDay: '',\r\n\r\n      smtp_from: '',\r\n      smtp_email: '',\r\n      smtp_pass: '',\r\n      smtp_reply: '',\r\n      smtp_subject: '',\r\n    };\r\n    this.handleClickParse = this.handleClickParse.bind(this);\r\n    this.handleClickEmPass = this.handleClickEmPass.bind(this);\r\n\r\n    this.handleClickClear = this.handleClickClear.bind(this);\r\n    this.handleClickRemove = this.handleClickRemove.bind(this);\r\n    this.handleClickBulk = this.handleClickBulk.bind(this);\r\n    this.fetchSingleEmail = this.fetchSingleEmail.bind(this);\r\n    \r\n    \r\n    this.handleClickSmtpDefault = this.handleClickSmtpDefault.bind(this);\r\n    this.handleChangeFields = this.handleChangeFields.bind(this);\r\n  } \r\n\r\n  componentDidMount() {\r\n    this.handleClickSmtpDefault();\r\n  }\r\n  \r\n  //Text to emails & passwords\r\n  rawToData(txt) {\r\n    let rez = [];\r\n    let txt_n = txt.split('\\n');\r\n    txt_n.forEach(el1 => {\r\n      let txt_space = el1.split(' ');\r\n      txt_space.forEach(el2 => {\r\n        if(this.checkIfEmailInString(el2)){\r\n          el2 = el2.replace('|','');\r\n          let txt_tchk = el2.split(':');\r\n          rez.push({\r\n            email: txt_tchk[0],\r\n            pass: txt_tchk[1],\r\n            status: 'Not Started',\r\n            classcss: ''\r\n          });\r\n        }\r\n      });\r\n    });\r\n    return rez;\r\n  }\r\n\r\n  checkIfEmailInString(text) { \r\n    var re = /(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))/;\r\n    return re.test(text);\r\n  }\r\n\r\n  // Retrieve emails only from inserted text\r\n  extractEmails(text){\r\n    return text.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\\.[a-zA-Z0-9._-]+)/gi);\r\n  }\r\n\r\n  //Parse emails only\r\n  handleClickParse(){\r\n    let extractedEmails = this.extractEmails(this.state.areaValue);\r\n    let emailsObj = [];\r\n    if(extractedEmails == null){\r\n      this.setState({\r\n        emails: '',\r\n        areaValue: ''\r\n      });  \r\n      alert('no emails!');\r\n      return false;\r\n    }\r\n    extractedEmails.forEach(function (item, index) {\r\n      emailsObj.push({\r\n        email: item,\r\n        status: 'Not Started',\r\n        classcss: ''\r\n      })\r\n    });\r\n    this.setState({\r\n      emails: emailsObj,\r\n    });\r\n  }\r\n\r\n  //Parse emails & passwords\r\n  handleClickEmPass(){\r\n    const areaValue = this.state.areaValue;\r\n    const emailsData = this.rawToData(areaValue);\r\n    if(emailsData.length === 0){\r\n      this.setState({\r\n        emails: '',\r\n        areaValue: ''\r\n      });  \r\n      alert('no emails!');\r\n      return false;\r\n    }\r\n    this.setState({\r\n      emails: emailsData\r\n    });\r\n  }\r\n\r\n  //Click on clear button to empty\r\n  handleClickClear(){\r\n    this.setState({\r\n      areaValue: '',\r\n      emails: []\r\n    });\r\n  }\r\n\r\n  //Remove 1 email\r\n  handleClickRemove(index) {\r\n    const oldEmails = this.state.emails;\r\n    // const email = oldEmails[index].email;\r\n    oldEmails.splice(index,1);\r\n    this.setState({\r\n      emails: oldEmails,\r\n    });\r\n  }\r\n\r\n  // Send Request single\r\n  async fetchSingleEmail(email,index,pass=''){\r\n    const url = 'http://dev.pro24web.site/bulk_email/email.php';\r\n    const smtp = {\r\n      // smtp_body: this.state.smtp_body,\r\n      smtp_email: this.state.smtp_email,\r\n      smtp_from: this.state.smtp_from,\r\n      smtp_pass: this.state.smtp_pass,\r\n      smtp_reply: this.state.smtp_reply,\r\n      smtp_subject: this.state.smtp_subject\r\n    }\r\n    try {\r\n      const res = await fetch(url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type' : 'application/json'\r\n        },\r\n        body: JSON.stringify({ email, index, pass, smtp })\r\n      });\r\n      const data = await res.json();\r\n      \r\n      //Response from server\r\n        let emails = this.state.emails;\r\n        emails[data.emails_index].status = data.emails_status;\r\n        emails[data.emails_index].classcss = data.emails_classcss;\r\n        emails[data.emails_index].msg = data.msg;\r\n        \r\n        this.setState({\r\n          emails: emails,\r\n          amountPerDay: data.amountPerDay\r\n        });\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  //Sending massive emails\r\n  async handleClickBulk(){\r\n    const emails = this.state.emails;\r\n    for (let index = 0; index < emails.length; index++) {\r\n      const emailData = emails[index];\r\n      await this.fetchSingleEmail(emailData.email, index, emailData.pass);\r\n    }\r\n  }\r\n\r\n  // Set default SMTP data\r\n  handleClickSmtpDefault(){\r\n    this.setState({\r\n      smtp_from: 'Martin',\r\n      smtp_email: 'vpntester@geroy.ooo',\r\n      smtp_pass: 'vavt1234#',\r\n      smtp_reply: 'martin@vpntester.net',\r\n      smtp_subject: 'Your NordVPN account has been hacked',\r\n    });\r\n  }\r\n\r\n  // Universal changing input/textarea and update states\r\n  handleChangeFields(event){\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const obj = {};\r\n    obj[name] = value;    \r\n    this.setState(obj);\r\n  }\r\n \r\n  \r\n  \r\n  \r\n  render() {\r\n    const areaValue = this.state.areaValue;\r\n    const emails = this.state.emails;\r\n    let rows;\r\n    if( Array.isArray(emails) && emails.length ){\r\n      rows = emails.map((email,index) =>\r\n        <tr key={index} className={ email.classcss }>\r\n          <th scope=\"row\">{index+1}</th>\r\n          <td>{email.email}</td>\r\n          <td>{email.pass}</td>\r\n          <td>{email.status}</td>\r\n          <td>{email.msg}</td>\r\n          <td>\r\n            <button type=\"button\" className=\"btn btn-sm btn-secondary\" onClick={() => this.fetchSingleEmail(email.email, index, email.pass)}><i className=\"fas fa-envelope-open-text\"></i> Send</button>\r\n            <button type=\"button\" className=\"btn btn-sm btn-danger\" onClick={() => this.handleClickRemove(index)}><i className=\"far fa-trash-alt\"></i></button>\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n    \r\n    return (\r\n      <div className=\"App\">\r\n        <div className={styles.side}>\r\n          <h4>SMTP Settings</h4>\r\n          <div className=\"form-group\">\r\n            <small className=\"form-text text-muted\">Name ( from )</small>\r\n            <input type=\"text\" name=\"smtp_from\" className=\"form-control form-control-sm\" value={this.state.smtp_from} onChange={this.handleChangeFields} />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <small className=\"form-text text-muted\">Yandex smtp email</small>\r\n            <input type=\"text\" name=\"smtp_email\" className=\"form-control form-control-sm\" value={this.state.smtp_email} onChange={this.handleChangeFields} />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <small className=\"form-text text-muted\">Yandex smtp pass</small>\r\n            <input type=\"text\" name=\"smtp_pass\" className=\"form-control form-control-sm\" value={this.state.smtp_pass} onChange={this.handleChangeFields} />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <small className=\"form-text text-muted\">Reply to</small>\r\n            <input type=\"text\" name=\"smtp_reply\" className=\"form-control form-control-sm\" value={this.state.smtp_reply} onChange={this.handleChangeFields} />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <small className=\"form-text text-muted\">Subject</small>\r\n            <input type=\"text\" name=\"smtp_subject\" className=\"form-control form-control-sm\" value={this.state.smtp_subject} onChange={this.handleChangeFields}/>\r\n          </div>\r\n\r\n          <button type=\"button\" className=\"btn btn-warning btn-sm\" onClick={this.handleClickSmtpDefault}><i className=\"fas fa-street-view\"></i> Default</button>\r\n        </div>\r\n        <div className={styles.amountPerDay}>\r\n          <b>Sent today</b> <br/>\r\n          {this.state.amountPerDay}\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h3>Bulk Sending emails</h3>\r\n              \r\n              <div className=\"form-group\">\r\n                <textarea \r\n                  className=\"form-control mb-2\" \r\n                  rows=\"5\"\r\n                  value={areaValue} \r\n                  name='areaValue'\r\n                  onChange={this.handleChangeFields}\r\n                  placeholder=\"Paste emails here\">\r\n                </textarea>\r\n                { areaValue.length === 0  \r\n                  ?<React.Fragment></React.Fragment>\r\n                  :<React.Fragment>\r\n                    <button type=\"button\" className=\"btn btn-info btn-sm\" onClick={this.handleClickParse}><i className=\"fas fa-hat-wizard\"></i> Emails only</button>\r\n                    <button type=\"button\" className=\"btn btn-info btn-sm\" onClick={this.handleClickEmPass}><i className=\"fas fa-hat-wizard\"></i> Emails & Pass</button>\r\n                    <button type=\"button\" className=\"btn btn-sm btn-light\" onClick={this.handleClickClear}><i className=\"fas fa-broom\"></i> Clear All</button>\r\n                  </React.Fragment>\r\n                }\r\n                { emails.length === 0  \r\n                  ?<React.Fragment></React.Fragment>\r\n                  :<React.Fragment>\r\n                    <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={this.handleClickBulk}><i className=\"fas fa-mail-bulk\"></i> Bulk Send</button>\r\n                  </React.Fragment>\r\n                }\r\n              </div>\r\n              <h5 className={styles.results}>\r\n                <span>Results</span>  \r\n                <span>Total: {this.state.emails.length}</span>\r\n              </h5>   \r\n              <table className=\"table table-sm table-hover table-striped\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\" className={styles.firstCol}>#</th>\r\n                    <th scope=\"col\" className={styles.secondCol}>To Email</th>\r\n                    <th scope=\"col\">Password</th>\r\n                    <th scope=\"col\">Status</th>\r\n                    <th scope=\"col\">Message</th>\r\n                    <th scope=\"col\" className={styles.lastCol}>Action</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {rows}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\admin\\react_projs\\email-bulk\\src\\reportWebVitals.js",[],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":62,"column":35,"nodeType":"28","messageId":"29","endLine":62,"endColumn":36,"suggestions":"30"},{"ruleId":"26","severity":1,"message":"27","line":62,"column":60,"nodeType":"28","messageId":"29","endLine":62,"endColumn":61,"suggestions":"31"},{"ruleId":"26","severity":1,"message":"27","line":62,"column":69,"nodeType":"28","messageId":"29","endLine":62,"endColumn":70,"suggestions":"32"},{"ruleId":"26","severity":1,"message":"27","line":62,"column":73,"nodeType":"28","messageId":"29","endLine":62,"endColumn":74,"suggestions":"33"},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["36","37"],["38","39"],["40","41"],["42","43"],"no-global-assign","no-unsafe-negation",{"messageId":"44","fix":"45","desc":"46"},{"messageId":"47","fix":"48","desc":"49"},{"messageId":"44","fix":"50","desc":"46"},{"messageId":"47","fix":"51","desc":"49"},{"messageId":"44","fix":"52","desc":"46"},{"messageId":"47","fix":"53","desc":"49"},{"messageId":"44","fix":"54","desc":"46"},{"messageId":"47","fix":"55","desc":"49"},"removeEscape",{"range":"56","text":"57"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"58","text":"59"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"60","text":"57"},{"range":"61","text":"59"},{"range":"62","text":"57"},{"range":"63","text":"59"},{"range":"64","text":"57"},{"range":"65","text":"59"},[1685,1686],"",[1685,1685],"\\",[1710,1711],[1710,1710],[1719,1720],[1719,1719],[1723,1724],[1723,1723]]